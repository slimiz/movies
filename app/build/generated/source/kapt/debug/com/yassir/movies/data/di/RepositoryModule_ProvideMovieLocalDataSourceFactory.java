// Generated by Dagger (https://dagger.dev).
package com.yassir.movies.data.di;

import com.yassir.movies.data.local.dao.MoviesDao;
import com.yassir.movies.data.mappers.MovieMapper;
import com.yassir.movies.data.repositories.movieLocalDataSource.MovieLocalDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvideMovieLocalDataSourceFactory implements Factory<MovieLocalDataSource> {
  private final RepositoryModule module;

  private final Provider<MoviesDao> movieDaoProvider;

  private final Provider<MovieMapper> movieMapperProvider;

  public RepositoryModule_ProvideMovieLocalDataSourceFactory(RepositoryModule module,
      Provider<MoviesDao> movieDaoProvider, Provider<MovieMapper> movieMapperProvider) {
    this.module = module;
    this.movieDaoProvider = movieDaoProvider;
    this.movieMapperProvider = movieMapperProvider;
  }

  @Override
  public MovieLocalDataSource get() {
    return provideMovieLocalDataSource(module, movieDaoProvider.get(), movieMapperProvider.get());
  }

  public static RepositoryModule_ProvideMovieLocalDataSourceFactory create(RepositoryModule module,
      Provider<MoviesDao> movieDaoProvider, Provider<MovieMapper> movieMapperProvider) {
    return new RepositoryModule_ProvideMovieLocalDataSourceFactory(module, movieDaoProvider, movieMapperProvider);
  }

  public static MovieLocalDataSource provideMovieLocalDataSource(RepositoryModule instance,
      MoviesDao movieDao, MovieMapper movieMapper) {
    return Preconditions.checkNotNullFromProvides(instance.provideMovieLocalDataSource(movieDao, movieMapper));
  }
}
