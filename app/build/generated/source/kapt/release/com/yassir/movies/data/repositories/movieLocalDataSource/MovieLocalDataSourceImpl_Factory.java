// Generated by Dagger (https://dagger.dev).
package com.yassir.movies.data.repositories.movieLocalDataSource;

import com.yassir.movies.data.local.dao.MoviesDao;
import com.yassir.movies.data.mappers.MovieMapper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MovieLocalDataSourceImpl_Factory implements Factory<MovieLocalDataSourceImpl> {
  private final Provider<MoviesDao> movieDaoProvider;

  private final Provider<MovieMapper> movieMapperProvider;

  public MovieLocalDataSourceImpl_Factory(Provider<MoviesDao> movieDaoProvider,
      Provider<MovieMapper> movieMapperProvider) {
    this.movieDaoProvider = movieDaoProvider;
    this.movieMapperProvider = movieMapperProvider;
  }

  @Override
  public MovieLocalDataSourceImpl get() {
    return newInstance(movieDaoProvider.get(), movieMapperProvider.get());
  }

  public static MovieLocalDataSourceImpl_Factory create(Provider<MoviesDao> movieDaoProvider,
      Provider<MovieMapper> movieMapperProvider) {
    return new MovieLocalDataSourceImpl_Factory(movieDaoProvider, movieMapperProvider);
  }

  public static MovieLocalDataSourceImpl newInstance(MoviesDao movieDao, MovieMapper movieMapper) {
    return new MovieLocalDataSourceImpl(movieDao, movieMapper);
  }
}
