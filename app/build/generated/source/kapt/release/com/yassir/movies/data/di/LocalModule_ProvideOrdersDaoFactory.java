// Generated by Dagger (https://dagger.dev).
package com.yassir.movies.data.di;

import com.yassir.movies.data.local.dao.MoviesDao;
import com.yassir.movies.data.local.database.MovieDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocalModule_ProvideOrdersDaoFactory implements Factory<MoviesDao> {
  private final LocalModule module;

  private final Provider<MovieDatabase> appDatabaseProvider;

  public LocalModule_ProvideOrdersDaoFactory(LocalModule module,
      Provider<MovieDatabase> appDatabaseProvider) {
    this.module = module;
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public MoviesDao get() {
    return provideOrdersDao(module, appDatabaseProvider.get());
  }

  public static LocalModule_ProvideOrdersDaoFactory create(LocalModule module,
      Provider<MovieDatabase> appDatabaseProvider) {
    return new LocalModule_ProvideOrdersDaoFactory(module, appDatabaseProvider);
  }

  public static MoviesDao provideOrdersDao(LocalModule instance, MovieDatabase appDatabase) {
    return Preconditions.checkNotNullFromProvides(instance.provideOrdersDao(appDatabase));
  }
}
