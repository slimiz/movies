// Generated by Dagger (https://dagger.dev).
package com.yassir.movies.data.repositories;

import com.yassir.movies.data.repositories.movieLocalDataSource.MovieLocalDataSource;
import com.yassir.movies.data.repositories.movieRemoteDataSource.MovieRemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MovieRepositoryImpl_Factory implements Factory<MovieRepositoryImpl> {
  private final Provider<MovieLocalDataSource> movieLocalDataSourceProvider;

  private final Provider<MovieRemoteDataSource> movieRemoteDataSourceProvider;

  public MovieRepositoryImpl_Factory(Provider<MovieLocalDataSource> movieLocalDataSourceProvider,
      Provider<MovieRemoteDataSource> movieRemoteDataSourceProvider) {
    this.movieLocalDataSourceProvider = movieLocalDataSourceProvider;
    this.movieRemoteDataSourceProvider = movieRemoteDataSourceProvider;
  }

  @Override
  public MovieRepositoryImpl get() {
    return newInstance(movieLocalDataSourceProvider.get(), movieRemoteDataSourceProvider.get());
  }

  public static MovieRepositoryImpl_Factory create(
      Provider<MovieLocalDataSource> movieLocalDataSourceProvider,
      Provider<MovieRemoteDataSource> movieRemoteDataSourceProvider) {
    return new MovieRepositoryImpl_Factory(movieLocalDataSourceProvider, movieRemoteDataSourceProvider);
  }

  public static MovieRepositoryImpl newInstance(MovieLocalDataSource movieLocalDataSource,
      MovieRemoteDataSource movieRemoteDataSource) {
    return new MovieRepositoryImpl(movieLocalDataSource, movieRemoteDataSource);
  }
}
