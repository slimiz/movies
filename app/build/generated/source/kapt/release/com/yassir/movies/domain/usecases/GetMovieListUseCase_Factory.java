// Generated by Dagger (https://dagger.dev).
package com.yassir.movies.domain.usecases;

import com.yassir.movies.domain.repositories.MovieRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetMovieListUseCase_Factory implements Factory<GetMovieListUseCase> {
  private final Provider<MovieRepository> movieRepositoryProvider;

  public GetMovieListUseCase_Factory(Provider<MovieRepository> movieRepositoryProvider) {
    this.movieRepositoryProvider = movieRepositoryProvider;
  }

  @Override
  public GetMovieListUseCase get() {
    return newInstance(movieRepositoryProvider.get());
  }

  public static GetMovieListUseCase_Factory create(
      Provider<MovieRepository> movieRepositoryProvider) {
    return new GetMovieListUseCase_Factory(movieRepositoryProvider);
  }

  public static GetMovieListUseCase newInstance(MovieRepository movieRepository) {
    return new GetMovieListUseCase(movieRepository);
  }
}
